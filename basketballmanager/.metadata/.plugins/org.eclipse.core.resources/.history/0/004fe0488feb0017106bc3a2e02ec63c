package Basketballmanager.gui.gamechoose;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;

import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.SwingConstants;

import Basketballmanager.constant.Const_UI;
public class background extends JPanel{
	private static final long serialVersionUID = -8505197231593797314L;
    public static Image image;  
    private Image image1;  
    private Image image2;  
    private Image image3;  
    private Image image4;  
    public static modeChoose ChooseMode=new modeChoose();
    public static modeChooseLayer2 ChooseMode2= new modeChooseLayer2();
    public static modeChooseLayer3 ChooseMode3=new modeChooseLayer3();

    public static JProgressBar processBar = new JProgressBar();// 创建进度条  
    
    
    public static JLabel output= new JLabel();
	public background()
	{
		this.setSize(Const_UI.FRAME_WIDTH, Const_UI.FRAME_HEIGHT);
		this.setLocation(0, 0);
		this.setLayout(null);
		// 可影响高度
        image = Toolkit.getDefaultToolkit().createImage(  
        		background.class  
                        .getResource("/img/NBA2.gif"));  
        /** 
         *  initialize output 
         */
        output.setLocation(400,50);
        output.setSize(500,550);
        output.setVerticalAlignment(SwingConstants.TOP);
        output.setVisible(false);
        
        /**
         *  initialize processBar
         */
        processBar.setString("Loading");
        processBar.setStringPainted(true);
        processBar.setBackground(Color.GREEN);  
        processBar.setVisible(false);
        
        this.add(output);
        this.add(ChooseMode);
        this.add(ChooseMode2);
        this.add(ChooseMode3);
		this.setVisible(true);
		
	}

	/**
	 * 绘制
	 */
	public void paintComponent(Graphics g) {
        super.paintComponent(g);  
       
        g.drawImage(image, 0, 0, this);  
	}
}
